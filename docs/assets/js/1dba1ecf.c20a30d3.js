"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2510],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>u});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(r),u=o,f=d["".concat(i,".").concat(u)]||d[u]||m[u]||a;return r?n.createElement(f,l(l({ref:t},p),{},{components:r})):n.createElement(f,l({ref:t},p))}));function u(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3918:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"Metrics"},l=void 0,c={unversionedId:"metrics",id:"metrics",title:"Metrics",description:"To view Eraser metrics, you will need to deploy an Open Telemetry collector in the 'eraser-system' namespace, and an exporter. An example collector with a Prometheus exporter is otelcollector.yaml, and the endpoint can be passed in when deploying eraser ex4318. In this example, we are logging the collected data to the otel-collector pod, and exporting metrics through Prometheus at 'http8889/metrics', but a separate exporter can also be configured.",source:"@site/docs/metrics.md",sourceDirName:".",slug:"/metrics",permalink:"/eraser/docs/next/metrics",draft:!1,tags:[],version:"current",frontMatter:{title:"Metrics"},sidebar:"sidebar",previous:{title:"Customization",permalink:"/eraser/docs/next/customization"},next:{title:"Setup",permalink:"/eraser/docs/next/setup"}},i={},s=[{value:"Eraser",id:"eraser",level:4},{value:"Scanner",id:"scanner",level:4},{value:"ImageJob",id:"imagejob",level:4}],p={toc:s};function m(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"To view Eraser metrics, you will need to deploy an Open Telemetry collector in the 'eraser-system' namespace, and an exporter. An example collector with a Prometheus exporter is ",(0,o.kt)("a",{target:"_blank",href:r(3562).Z},"otelcollector.yaml"),", and the endpoint can be passed in when deploying eraser ex: --otlp-endpoint=otel-collector:4318. In this example, we are logging the collected data to the otel-collector pod, and exporting metrics through Prometheus at 'http://localhost:8889/metrics', but a separate exporter can also be configured."),(0,o.kt)("p",null,"Below is the list of metrics provided by Eraser per run:"),(0,o.kt)("h4",{id:"eraser"},"Eraser"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- count\n    - name: images_removed_run_total\n        - description: Total images removed by eraser\n")),(0,o.kt)("h4",{id:"scanner"},"Scanner"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- count\n    - name: vulnerable_images_run_total\n        - description: Total vulnerable images detected\n")),(0,o.kt)("h4",{id:"imagejob"},"ImageJob"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"- count\n    - name: imagejob_run_total\n        - description: Total ImageJobs scheduled\n    - name: pods_completed_run_total\n        - description: Total pods completed\n    -  name: pods_failed_run_total\n        - description: Total pods failed\n- summary\n    - name: imagejob_duration_run_seconds\n        - description: Total time for ImageJobs scheduled to complete\n")))}m.isMDXComponent=!0},3562:(e,t,r)=>{r.d(t,{Z:()=>n});const n=r.p+"assets/files/otelcollector-b9dc51f509ea94b3de8d92b416dcab3f.yaml"}}]);