"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[178],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(r),m=i,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,l=new Array(a);l[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=r[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8965:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=r(7462),i=(r(7294),r(3905));const a={title:"Exclusion"},l=void 0,o={unversionedId:"exclusion",id:"exclusion",title:"Exclusion",description:"Excluding registries, repositories, and images",source:"@site/docs/exclusion.md",sourceDirName:".",slug:"/exclusion",permalink:"/eraser/docs/next/exclusion",draft:!1,tags:[],version:"current",frontMatter:{title:"Exclusion"},sidebar:"sidebar",previous:{title:"Manual Removal",permalink:"/eraser/docs/next/manual-removal"},next:{title:"Customization",permalink:"/eraser/docs/next/customization"}},s={},p=[{value:"Excluding registries, repositories, and images",id:"excluding-registries-repositories-and-images",level:2},{value:"Exempting Nodes from the Eraser Pipeline",id:"exempting-nodes-from-the-eraser-pipeline",level:2}],c={toc:p};function d(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"excluding-registries-repositories-and-images"},"Excluding registries, repositories, and images"),(0,i.kt)("p",null,"Eraser can exclude registries (example, ",(0,i.kt)("inlineCode",{parentName:"p"},"docker.io/library/*"),") and also specific images with a tag (example, ",(0,i.kt)("inlineCode",{parentName:"p"},"docker.io/library/ubuntu:18.04"),") or digest (example, ",(0,i.kt)("inlineCode",{parentName:"p"},"sha256:80f31da1ac7b312ba29d65080fd..."),") from its removal process."),(0,i.kt)("p",null,"To exclude any images or registries from the removal, create configmap(s) with the label ",(0,i.kt)("inlineCode",{parentName:"p"},"eraser.sh/exclude.list=true")," in the eraser-system namespace with a JSON file holding the excluded images."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'$ cat > sample.json <<EOF\n{"excluded": ["docker.io/library/*", "ghcr.io/azure/test:latest"]}\nEOF\n\n$ kubectl create configmap excluded --from-file=excluded=sample.json --namespace=eraser-system\n$ kubectl label configmap excluded eraser.sh/exclude.list=true -n eraser-system\n')),(0,i.kt)("h2",{id:"exempting-nodes-from-the-eraser-pipeline"},"Exempting Nodes from the Eraser Pipeline"),(0,i.kt)("p",null,"Exempting nodes with ",(0,i.kt)("inlineCode",{parentName:"p"},"--filter-nodes")," is added in v0.3.0. When deploying Eraser, you can specify whether there is a list of nodes you would like to ",(0,i.kt)("inlineCode",{parentName:"p"},"include")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"exclude")," from the cleanup process using the ",(0,i.kt)("inlineCode",{parentName:"p"},"--filter-nodes")," argument. "),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/Azure/eraser/blob/main/charts/eraser/README.md"},"Eraser Helm Chart")," for more information on deployment.")),(0,i.kt)("p",null,"Nodes with the selector ",(0,i.kt)("inlineCode",{parentName:"p"},"eraser.sh/cleanup.filter")," will be filtered accordingly. "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"include")," is provided, eraser and collector pods will only be scheduled on nodes with the selector ",(0,i.kt)("inlineCode",{parentName:"li"},"eraser.sh/cleanup.filter"),". "),(0,i.kt)("li",{parentName:"ul"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"exclude")," is provided, eraser and collector pods will be scheduled on all nodes besides those with the selector ",(0,i.kt)("inlineCode",{parentName:"li"},"eraser.sh/cleanup.filter"),".")),(0,i.kt)("p",null,"Unless specified, the default value of ",(0,i.kt)("inlineCode",{parentName:"p"},"--filter-nodes")," is ",(0,i.kt)("inlineCode",{parentName:"p"},"exclude"),". Because Windows nodes are not supported, they will always be excluded regardless of the ",(0,i.kt)("inlineCode",{parentName:"p"},"eraser.sh/cleanup.filter")," label or the value of ",(0,i.kt)("inlineCode",{parentName:"p"},"--filter-nodes"),"."),(0,i.kt)("p",null,"Additional node selectors can be provided through the ",(0,i.kt)("inlineCode",{parentName:"p"},"--filter-nodes-selector")," flag."))}d.isMDXComponent=!0}}]);